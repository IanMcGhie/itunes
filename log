
> pugtest2@0.0.0 start /var/www/htdocs/nodeXmms
> node ./bin/www

reading playList -> /home/ian/monday.pls
found 4636 entries
setting up express
express setup
setting up websocket
websocket listening on port 6502

incoming url -> /
current state
{ timeRemaining: 0,
  currentlyPlaying: 1503,
  duration: 0,
  playList: [],
  shuffle: true,
  volume: 35,
  queueSong: -1,
  paused: false }
Received request
WebSocketRequest {
  _events:
   [Object: null prototype] {
     requestAccepted:
      { [Function: bound onceWrapper] listener: [Function: bound ] },
     requestResolved:
      { [Function: bound onceWrapper] listener: [Function: bound ] } },
  _eventsCount: 2,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        timeout: [Function: socketOnTimeout],
        close: [Function: bound ] },
     _eventsCount: 3,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::6502',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::6502',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     timeout: 120000,
     parser: null,
     on: [Function],
     _paused: false,
     _peername:
      { address: '::ffff:192.168.50.223', family: 'IPv6', port: 53072 },
     [Symbol(asyncId)]: 129,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 2031,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 130,
        [Symbol(triggerId)]: 129 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  httpRequest:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: true,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        paused: true,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
     _eventsCount: 1,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 129,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 129,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { host: 'winamp:6502',
        'user-agent':
         'Mozilla/5.0 (X11; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0',
        accept: '*/*',
        'accept-language': 'en-CA,en-US;q=0.7,en;q=0.3',
        'accept-encoding': 'gzip, deflate',
        'sec-websocket-version': '13',
        origin: 'http://winamp:3000',
        'sec-websocket-protocol': 'winamp',
        'sec-websocket-extensions': 'permessage-deflate',
        'sec-websocket-key': 'uTmR7Alt0710Ved5qIuAMw==',
        connection: 'keep-alive, Upgrade',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        upgrade: 'websocket' },
     rawHeaders:
      [ 'Host',
        'winamp:6502',
        'User-Agent',
        'Mozilla/5.0 (X11; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0',
        'Accept',
        '*/*',
        'Accept-Language',
        'en-CA,en-US;q=0.7,en;q=0.3',
        'Accept-Encoding',
        'gzip, deflate',
        'Sec-WebSocket-Version',
        '13',
        'Origin',
        'http://winamp:3000',
        'Sec-WebSocket-Protocol',
        'winamp',
        'Sec-WebSocket-Extensions',
        'permessage-deflate',
        'Sec-WebSocket-Key',
        'uTmR7Alt0710Ved5qIuAMw==',
        'Connection',
        'keep-alive, Upgrade',
        'Pragma',
        'no-cache',
        'Cache-Control',
        'no-cache',
        'Upgrade',
        'websocket' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: true,
     url: '/',
     method: 'GET',
     statusCode: null,
     statusMessage: null,
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 129,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     parser: null },
  resource: '/',
  remoteAddress: '::ffff:192.168.50.223',
  remoteAddresses: [ '::ffff:192.168.50.223' ],
  serverConfig:
   { httpServer: [ [Server] ],
     maxReceivedFrameSize: 65536,
     maxReceivedMessageSize: 1048576,
     fragmentOutgoingMessages: true,
     fragmentationThreshold: 16384,
     keepalive: true,
     keepaliveInterval: 20000,
     dropConnectionOnKeepaliveTimeout: true,
     keepaliveGracePeriod: 10000,
     useNativeKeepalive: false,
     assembleFragments: true,
     autoAcceptConnections: false,
     ignoreXForwardedFor: false,
     disableNagleAlgorithm: true,
     closeTimeout: 5000,
     url: 'ws://winamp:6502' },
  _socketIsClosing: false,
  _socketCloseHandler: [Function: bound ],
  _resolved: false,
  resourceURL:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: [Object: null prototype] {},
     pathname: '/',
     path: '/',
     href: '/' },
  host: 'winamp:6502',
  key: 'uTmR7Alt0710Ved5qIuAMw==',
  webSocketVersion: 13,
  origin: 'http://winamp:3000',
  protocolFullCaseMap: { winamp: 'winamp' },
  requestedProtocols: [ 'winamp' ],
  requestedExtensions: [ { name: 'permessage-deflate', params: [] } ],
  cookies: [] }
new connection from -> ::ffff:192.168.50.223
closing connection
Sat Jan 18 2020 13:16:40 GMT-0600 (Central Standard Time) Peer ::ffff:192.168.50.223 disconnected.

incoming url -> /
current state
{ timeRemaining: 0,
  currentlyPlaying: 1503,
  duration: 0,
  playList: [],
  shuffle: true,
  volume: 35,
  queueSong: -1,
  paused: false }
Received request
WebSocketRequest {
  _events:
   [Object: null prototype] {
     requestAccepted:
      { [Function: bound onceWrapper] listener: [Function: bound ] },
     requestResolved:
      { [Function: bound onceWrapper] listener: [Function: bound ] } },
  _eventsCount: 2,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        timeout: [Function: socketOnTimeout],
        close: [Function: bound ] },
     _eventsCount: 3,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::6502',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::6502',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     timeout: 120000,
     parser: null,
     on: [Function],
     _paused: false,
     _peername:
      { address: '::ffff:192.168.50.223', family: 'IPv6', port: 53082 },
     [Symbol(asyncId)]: 290,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 34714,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 291,
        [Symbol(triggerId)]: 290 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  httpRequest:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: true,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        paused: true,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
     _eventsCount: 1,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 290,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 290,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { host: 'winamp:6502',
        'user-agent':
         'Mozilla/5.0 (X11; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0',
        accept: '*/*',
        'accept-language': 'en-CA,en-US;q=0.7,en;q=0.3',
        'accept-encoding': 'gzip, deflate',
        'sec-websocket-version': '13',
        origin: 'http://winamp:3000',
        'sec-websocket-protocol': 'winamp',
        'sec-websocket-extensions': 'permessage-deflate',
        'sec-websocket-key': '0kG43iz7mXuSnqZ3quzjhA==',
        connection: 'keep-alive, Upgrade',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        upgrade: 'websocket' },
     rawHeaders:
      [ 'Host',
        'winamp:6502',
        'User-Agent',
        'Mozilla/5.0 (X11; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0',
        'Accept',
        '*/*',
        'Accept-Language',
        'en-CA,en-US;q=0.7,en;q=0.3',
        'Accept-Encoding',
        'gzip, deflate',
        'Sec-WebSocket-Version',
        '13',
        'Origin',
        'http://winamp:3000',
        'Sec-WebSocket-Protocol',
        'winamp',
        'Sec-WebSocket-Extensions',
        'permessage-deflate',
        'Sec-WebSocket-Key',
        '0kG43iz7mXuSnqZ3quzjhA==',
        'Connection',
        'keep-alive, Upgrade',
        'Pragma',
        'no-cache',
        'Cache-Control',
        'no-cache',
        'Upgrade',
        'websocket' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: true,
     url: '/',
     method: 'GET',
     statusCode: null,
     statusMessage: null,
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 290,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     parser: null },
  resource: '/',
  remoteAddress: '::ffff:192.168.50.223',
  remoteAddresses: [ '::ffff:192.168.50.223' ],
  serverConfig:
   { httpServer: [ [Server] ],
     maxReceivedFrameSize: 65536,
     maxReceivedMessageSize: 1048576,
     fragmentOutgoingMessages: true,
     fragmentationThreshold: 16384,
     keepalive: true,
     keepaliveInterval: 20000,
     dropConnectionOnKeepaliveTimeout: true,
     keepaliveGracePeriod: 10000,
     useNativeKeepalive: false,
     assembleFragments: true,
     autoAcceptConnections: false,
     ignoreXForwardedFor: false,
     disableNagleAlgorithm: true,
     closeTimeout: 5000,
     url: 'ws://winamp:6502' },
  _socketIsClosing: false,
  _socketCloseHandler: [Function: bound ],
  _resolved: false,
  resourceURL:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: [Object: null prototype] {},
     pathname: '/',
     path: '/',
     href: '/' },
  host: 'winamp:6502',
  key: '0kG43iz7mXuSnqZ3quzjhA==',
  webSocketVersion: 13,
  origin: 'http://winamp:3000',
  protocolFullCaseMap: { winamp: 'winamp' },
  requestedProtocols: [ 'winamp' ],
  requestedExtensions: [ { name: 'permessage-deflate', params: [] } ],
  cookies: [] }
new connection from -> ::ffff:192.168.50.223
closing connection
Sat Jan 18 2020 13:18:14 GMT-0600 (Central Standard Time) Peer ::ffff:192.168.50.223 disconnected.

incoming url -> /
current state
{ timeRemaining: 0,
  currentlyPlaying: 1503,
  duration: 0,
  playList: [],
  shuffle: true,
  volume: 35,
  queueSong: -1,
  paused: false }
Received request
WebSocketRequest {
  _events:
   [Object: null prototype] {
     requestAccepted:
      { [Function: bound onceWrapper] listener: [Function: bound ] },
     requestResolved:
      { [Function: bound onceWrapper] listener: [Function: bound ] } },
  _eventsCount: 2,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        timeout: [Function: socketOnTimeout],
        close: [Function: bound ] },
     _eventsCount: 3,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::6502',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::6502',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     timeout: 120000,
     parser: null,
     on: [Function],
     _paused: false,
     _peername:
      { address: '::ffff:192.168.50.223', family: 'IPv6', port: 53094 },
     [Symbol(asyncId)]: 483,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 129143,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 484,
        [Symbol(triggerId)]: 483 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  httpRequest:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: true,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        paused: true,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
     _eventsCount: 1,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 483,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 483,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { host: 'winamp:6502',
        'user-agent':
         'Mozilla/5.0 (X11; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0',
        accept: '*/*',
        'accept-language': 'en-CA,en-US;q=0.7,en;q=0.3',
        'accept-encoding': 'gzip, deflate',
        'sec-websocket-version': '13',
        origin: 'http://winamp:3000',
        'sec-websocket-protocol': 'winamp',
        'sec-websocket-extensions': 'permessage-deflate',
        'sec-websocket-key': 'wPhgdfjvGa0fqLTZRfknRw==',
        connection: 'keep-alive, Upgrade',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        upgrade: 'websocket' },
     rawHeaders:
      [ 'Host',
        'winamp:6502',
        'User-Agent',
        'Mozilla/5.0 (X11; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0',
        'Accept',
        '*/*',
        'Accept-Language',
        'en-CA,en-US;q=0.7,en;q=0.3',
        'Accept-Encoding',
        'gzip, deflate',
        'Sec-WebSocket-Version',
        '13',
        'Origin',
        'http://winamp:3000',
        'Sec-WebSocket-Protocol',
        'winamp',
        'Sec-WebSocket-Extensions',
        'permessage-deflate',
        'Sec-WebSocket-Key',
        'wPhgdfjvGa0fqLTZRfknRw==',
        'Connection',
        'keep-alive, Upgrade',
        'Pragma',
        'no-cache',
        'Cache-Control',
        'no-cache',
        'Upgrade',
        'websocket' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: true,
     url: '/',
     method: 'GET',
     statusCode: null,
     statusMessage: null,
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 483,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     parser: null },
  resource: '/',
  remoteAddress: '::ffff:192.168.50.223',
  remoteAddresses: [ '::ffff:192.168.50.223' ],
  serverConfig:
   { httpServer: [ [Server] ],
     maxReceivedFrameSize: 65536,
     maxReceivedMessageSize: 1048576,
     fragmentOutgoingMessages: true,
     fragmentationThreshold: 16384,
     keepalive: true,
     keepaliveInterval: 20000,
     dropConnectionOnKeepaliveTimeout: true,
     keepaliveGracePeriod: 10000,
     useNativeKeepalive: false,
     assembleFragments: true,
     autoAcceptConnections: false,
     ignoreXForwardedFor: false,
     disableNagleAlgorithm: true,
     closeTimeout: 5000,
     url: 'ws://winamp:6502' },
  _socketIsClosing: false,
  _socketCloseHandler: [Function: bound ],
  _resolved: false,
  resourceURL:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: [Object: null prototype] {},
     pathname: '/',
     path: '/',
     href: '/' },
  host: 'winamp:6502',
  key: 'wPhgdfjvGa0fqLTZRfknRw==',
  webSocketVersion: 13,
  origin: 'http://winamp:3000',
  protocolFullCaseMap: { winamp: 'winamp' },
  requestedProtocols: [ 'winamp' ],
  requestedExtensions: [ { name: 'permessage-deflate', params: [] } ],
  cookies: [] }
new connection from -> ::ffff:192.168.50.223
closing connection
Sat Jan 18 2020 13:18:42 GMT-0600 (Central Standard Time) Peer ::ffff:192.168.50.223 disconnected.

incoming url -> /
current state
{ timeRemaining: 0,
  currentlyPlaying: 1503,
  duration: 0,
  playList: [],
  shuffle: true,
  volume: 35,
  queueSong: -1,
  paused: false }
Received request
WebSocketRequest {
  _events:
   [Object: null prototype] {
     requestAccepted:
      { [Function: bound onceWrapper] listener: [Function: bound ] },
     requestResolved:
      { [Function: bound onceWrapper] listener: [Function: bound ] } },
  _eventsCount: 2,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        timeout: [Function: socketOnTimeout],
        close: [Function: bound ] },
     _eventsCount: 3,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::6502',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::6502',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     timeout: 120000,
     parser: null,
     on: [Function],
     _paused: false,
     _peername:
      { address: '::ffff:192.168.50.223', family: 'IPv6', port: 53104 },
     [Symbol(asyncId)]: 644,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 157146,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 645,
        [Symbol(triggerId)]: 644 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  httpRequest:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: true,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        paused: true,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
     _eventsCount: 1,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 644,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 644,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { host: 'winamp:6502',
        'user-agent':
         'Mozilla/5.0 (X11; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0',
        accept: '*/*',
        'accept-language': 'en-CA,en-US;q=0.7,en;q=0.3',
        'accept-encoding': 'gzip, deflate',
        'sec-websocket-version': '13',
        origin: 'http://winamp:3000',
        'sec-websocket-protocol': 'winamp',
        'sec-websocket-extensions': 'permessage-deflate',
        'sec-websocket-key': '/LXqMTVOjZEWhK711Sme9A==',
        connection: 'keep-alive, Upgrade',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        upgrade: 'websocket' },
     rawHeaders:
      [ 'Host',
        'winamp:6502',
        'User-Agent',
        'Mozilla/5.0 (X11; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0',
        'Accept',
        '*/*',
        'Accept-Language',
        'en-CA,en-US;q=0.7,en;q=0.3',
        'Accept-Encoding',
        'gzip, deflate',
        'Sec-WebSocket-Version',
        '13',
        'Origin',
        'http://winamp:3000',
        'Sec-WebSocket-Protocol',
        'winamp',
        'Sec-WebSocket-Extensions',
        'permessage-deflate',
        'Sec-WebSocket-Key',
        '/LXqMTVOjZEWhK711Sme9A==',
        'Connection',
        'keep-alive, Upgrade',
        'Pragma',
        'no-cache',
        'Cache-Control',
        'no-cache',
        'Upgrade',
        'websocket' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: true,
     url: '/',
     method: 'GET',
     statusCode: null,
     statusMessage: null,
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 644,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     parser: null },
  resource: '/',
  remoteAddress: '::ffff:192.168.50.223',
  remoteAddresses: [ '::ffff:192.168.50.223' ],
  serverConfig:
   { httpServer: [ [Server] ],
     maxReceivedFrameSize: 65536,
     maxReceivedMessageSize: 1048576,
     fragmentOutgoingMessages: true,
     fragmentationThreshold: 16384,
     keepalive: true,
     keepaliveInterval: 20000,
     dropConnectionOnKeepaliveTimeout: true,
     keepaliveGracePeriod: 10000,
     useNativeKeepalive: false,
     assembleFragments: true,
     autoAcceptConnections: false,
     ignoreXForwardedFor: false,
     disableNagleAlgorithm: true,
     closeTimeout: 5000,
     url: 'ws://winamp:6502' },
  _socketIsClosing: false,
  _socketCloseHandler: [Function: bound ],
  _resolved: false,
  resourceURL:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: [Object: null prototype] {},
     pathname: '/',
     path: '/',
     href: '/' },
  host: 'winamp:6502',
  key: '/LXqMTVOjZEWhK711Sme9A==',
  webSocketVersion: 13,
  origin: 'http://winamp:3000',
  protocolFullCaseMap: { winamp: 'winamp' },
  requestedProtocols: [ 'winamp' ],
  requestedExtensions: [ { name: 'permessage-deflate', params: [] } ],
  cookies: [] }
new connection from -> ::ffff:192.168.50.223
closing connection
Sat Jan 18 2020 13:19:20 GMT-0600 (Central Standard Time) Peer ::ffff:192.168.50.223 disconnected.

incoming url -> /
current state
{ timeRemaining: 0,
  currentlyPlaying: 1503,
  duration: 0,
  playList: [],
  shuffle: true,
  volume: 35,
  queueSong: -1,
  paused: false }
Received request
WebSocketRequest {
  _events:
   [Object: null prototype] {
     requestAccepted:
      { [Function: bound onceWrapper] listener: [Function: bound ] },
     requestResolved:
      { [Function: bound onceWrapper] listener: [Function: bound ] } },
  _eventsCount: 2,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        timeout: [Function: socketOnTimeout],
        close: [Function: bound ] },
     _eventsCount: 3,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::6502',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::6502',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     timeout: 120000,
     parser: null,
     on: [Function],
     _paused: false,
     _peername:
      { address: '::ffff:192.168.50.223', family: 'IPv6', port: 53116 },
     [Symbol(asyncId)]: 805,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 194965,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 806,
        [Symbol(triggerId)]: 805 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  httpRequest:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: true,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        paused: true,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
     _eventsCount: 1,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 805,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 805,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { host: 'winamp:6502',
        'user-agent':
         'Mozilla/5.0 (X11; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0',
        accept: '*/*',
        'accept-language': 'en-CA,en-US;q=0.7,en;q=0.3',
        'accept-encoding': 'gzip, deflate',
        'sec-websocket-version': '13',
        origin: 'http://winamp:3000',
        'sec-websocket-protocol': 'winamp',
        'sec-websocket-extensions': 'permessage-deflate',
        'sec-websocket-key': '9IGZktC9l6bpce4EsAz7jQ==',
        connection: 'keep-alive, Upgrade',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        upgrade: 'websocket' },
     rawHeaders:
      [ 'Host',
        'winamp:6502',
        'User-Agent',
        'Mozilla/5.0 (X11; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0',
        'Accept',
        '*/*',
        'Accept-Language',
        'en-CA,en-US;q=0.7,en;q=0.3',
        'Accept-Encoding',
        'gzip, deflate',
        'Sec-WebSocket-Version',
        '13',
        'Origin',
        'http://winamp:3000',
        'Sec-WebSocket-Protocol',
        'winamp',
        'Sec-WebSocket-Extensions',
        'permessage-deflate',
        'Sec-WebSocket-Key',
        '9IGZktC9l6bpce4EsAz7jQ==',
        'Connection',
        'keep-alive, Upgrade',
        'Pragma',
        'no-cache',
        'Cache-Control',
        'no-cache',
        'Upgrade',
        'websocket' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: true,
     url: '/',
     method: 'GET',
     statusCode: null,
     statusMessage: null,
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: null,
        on: [Function],
        _paused: false,
        _peername: [Object],
        [Symbol(asyncId)]: 805,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: [Timeout],
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     parser: null },
  resource: '/',
  remoteAddress: '::ffff:192.168.50.223',
  remoteAddresses: [ '::ffff:192.168.50.223' ],
  serverConfig:
   { httpServer: [ [Server] ],
     maxReceivedFrameSize: 65536,
     maxReceivedMessageSize: 1048576,
     fragmentOutgoingMessages: true,
     fragmentationThreshold: 16384,
     keepalive: true,
     keepaliveInterval: 20000,
     dropConnectionOnKeepaliveTimeout: true,
     keepaliveGracePeriod: 10000,
     useNativeKeepalive: false,
     assembleFragments: true,
     autoAcceptConnections: false,
     ignoreXForwardedFor: false,
     disableNagleAlgorithm: true,
     closeTimeout: 5000,
     url: 'ws://winamp:6502' },
  _socketIsClosing: false,
  _socketCloseHandler: [Function: bound ],
  _resolved: false,
  resourceURL:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: [Object: null prototype] {},
     pathname: '/',
     path: '/',
     href: '/' },
  host: 'winamp:6502',
  key: '9IGZktC9l6bpce4EsAz7jQ==',
  webSocketVersion: 13,
  origin: 'http://winamp:3000',
  protocolFullCaseMap: { winamp: 'winamp' },
  requestedProtocols: [ 'winamp' ],
  requestedExtensions: [ { name: 'permessage-deflate', params: [] } ],
  cookies: [] }
new connection from -> ::ffff:192.168.50.223
new song -> /g/Goodman, Benny/Benny Goodman & Helen Forrest - Smoke Gets In Your Eyes.mp3 index -> 1879

incoming url -> /newsong////home/ian/mp3/g/Goodman,%20Benny/Benny%20Goodman%20&%20Helen%20Forrest%20-%20Smoke%20Gets%20In%20Your%20Eyes.mp3
current state
{ timeRemaining: 0,
  currentlyPlaying: 1879,
  duration: 0,
  playList: [],
  shuffle: true,
  volume: 35,
  queueSong: -1,
  paused: false }

incoming url -> /next
current state
{ timeRemaining: 0,
  currentlyPlaying: 1879,
  duration: 0,
  playList: [],
  shuffle: true,
  volume: 35,
  queueSong: -1,
  paused: false }
new song -> /w/Williams, Mary Lou/Chronological Classics 1927-1940/22 Scratchin' The Gravel.mp3 index -> 4490

incoming url -> /newsong////home/ian/mp3/w/Williams,%20Mary%20Lou/Chronological%20Classics%201927-1940/22%20Scratchin'%20The%20Gravel.mp3
current state
{ timeRemaining: 0,
  currentlyPlaying: 4490,
  duration: 0,
  playList: [],
  shuffle: true,
  volume: 35,
  queueSong: -1,
  paused: false }
